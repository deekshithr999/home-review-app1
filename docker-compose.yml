services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: home_reviews
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  backend:
    build: ./backend
    container_name: flask-backend
    restart: always
    depends_on:
      - mysql
    environment:
      MYSQL_USER: root
      MYSQL_PASSWORD: rootpass
      MYSQL_DB: home_reviews
      MYSQL_HOST: mysql
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    depends_on:
      - backend
    command: ["true"]  # Prevent container from staying up â€” we only build
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: always
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/html:/usr/share/nginx/html:ro
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
