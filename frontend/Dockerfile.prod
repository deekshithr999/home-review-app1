# Stage 1: Build React app
# FROM node:18 as build

# WORKDIR /app
# COPY . .

# RUN npm install
# RUN npm run build

# # Stage 2: Serve using NGINX
# FROM nginx:stable-alpine


# # Replace the default NGINX config
# COPY nginx.conf /etc/nginx/conf.d/default.conf


# # Copy the build output to NGINXâ€™s default public folder
# COPY --from=build /app/build /usr/share/nginx/html

# EXPOSE 80
# # CMD ["nginx", "-g", "daemon off;"]



# # Stage 1: Build React
# FROM node:18 as build
# WORKDIR /app
# COPY package*.json ./
# RUN npm install
# COPY . .
# RUN npm run build

# # Stage 2: Copy build output (Nginx will handle serving)
# FROM alpine:latest
# RUN mkdir -p /app/build
# COPY --from=build /app/build /app/build


# Stage 1: Build
FROM node:18 as builder
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# Stage 2: Create lightweight container with build output
FROM alpine:latest
WORKDIR /app
RUN mkdir -p /app/build
COPY --from=builder /app/build /app/build
CMD ["echo", "Build complete - files are ready for Nginx"]